name: CI/CD for Blockstracker

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:
    branches: [main]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build app
        run: npm run build

      - name: Run lint
        run: npm run lint

      - name: Run tests
        run: npm test

  build:
    needs: lint-and-test
    if: startsWith(github.ref, 'refs/tags/v') # Only build on version tags
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Set USE_HARD_LINKS to false
        run: echo "USE_HARD_LINKS=false" >> $GITHUB_ENV

      - name: Package Electron App
        run: npm run package

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: release/build # Adjust this based on your output directory

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v') # Only release on version tags
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: release/build

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/build/*mac.zip*
            release/build/*.dmg*
            release/build/*.exe*
            release/build/*.AppImage
            release/build/latest*.yml
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
