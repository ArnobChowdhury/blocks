// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  output        = "../src/generated/client"
  binaryTargets = ["native", "darwin", "darwin-arm64", "windows"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model RepetitiveTaskTemplate {
  id                       Int       @id @default(autoincrement())
  isActive                 Boolean   @default(true)
  title                    String
  description              String?
  schedule                 String
  priority                 Int       @default(3)
  shouldBeScored           Boolean?  @default(false)
  monday                   Boolean?  @default(false)
  tuesday                  Boolean?  @default(false)
  wednesday                Boolean?  @default(false)
  thursday                 Boolean?  @default(false)
  friday                   Boolean?  @default(false)
  saturday                 Boolean?  @default(false)
  sunday                   Boolean?  @default(false)
  timeOfDay                String?
  lastDateOfTaskGeneration DateTime?
  createdAt                DateTime  @default(now())
  modifiedAt               DateTime  @updatedAt
  tags                     Tag[]
  Task                     Task[]
}

model Task {
  id                       Int                     @id @default(autoincrement())
  isActive                 Boolean                 @default(true)
  title                    String
  description              String?
  schedule                 String
  priority                 Int                     @default(3)
  completionStatus         String                  @default("INCOMPLETE")
  dueDate                  DateTime?
  shouldBeScored           Boolean?
  score                    Int?
  timeOfDay                String?
  RepetitiveTaskTemplate   RepetitiveTaskTemplate? @relation(fields: [repetitiveTaskTemplateId], references: [id], onDelete: Cascade)
  repetitiveTaskTemplateId Int?
  createdAt                DateTime                @default(now())
  modifiedAt               DateTime                @updatedAt
  tags                     Tag[]

  @@unique([repetitiveTaskTemplateId, dueDate])
}

model Tag {
  id              Int                      @id @default(autoincrement())
  name            String
  tasks           Task[]
  repetitiveTasks RepetitiveTaskTemplate[]
  createdAt       DateTime                 @default(now())
  modifiedAt      DateTime                 @updatedAt
}
